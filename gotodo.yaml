apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert --out gotodo.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: todoback
      name: todoback
    spec:
      ports:
        - name: "8080"
          port: 8080
          targetPort: 8080
      selector:
        io.kompose.service: todoback
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert --out gotodo.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: todofront
      name: todofront
    spec:
      ports:
        - name: "80"
          port: 80
          targetPort: 80
      selector:
        io.kompose.service: todofront
      type: LoadBalancer
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert --out gotodo.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: todoback
      name: todoback
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: todoback
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert --out gotodo.yaml
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.network/backend: "true"
            io.kompose.service: todoback
        spec:
          containers:
            - image: gotodoapp/debug:v0.28.03.2021
              name: todoback
              ports:
                - containerPort: 8080
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      name: backend
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  io.kompose.network/backend: "true"
      podSelector:
        matchLabels:
          io.kompose.network/backend: "true"
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert --out gotodo.yaml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: todofront
      name: todofront
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: todofront
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert --out gotodo.yaml
            kompose.version: 1.22.0 (955b78124)
          creationTimestamp: null
          labels:
            io.kompose.network/backend: "true"
            io.kompose.network/frontend: "true"
            io.kompose.service: todofront
        spec:
          containers:
            - image: gotodoappcli/debug:v0.28.03.2021
              name: todofront
              ports:
                - containerPort: 80
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      name: frontend
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  io.kompose.network/frontend: "true"
      podSelector:
        matchLabels:
          io.kompose.network/frontend: "true"
#  - apiVersion: networking.k8s.io/v1
#    kind: Ingress
#    metadata:
#      name: gotodo-ingress
#    spec:
#      rules:
#      - http:
#          paths:
#          - path: /
#            backend:
#              serviceName: todofront
#              servicePort: 80
kind: List
metadata: {}

